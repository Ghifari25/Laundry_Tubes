pipeline {
    agent any
    environment {
        // Variabel lingkungan untuk menyimpan nama file dan image
        DOCKER_IMAGE = 'laundryy-syifa'
        NETWORK_NAME = 'laundryy-syifa'
        MYSQL_ROOT_PASSWORD = 'syifa123'
        MYSQL_DATABASE = 'homestead2091'
    }
    stages {
        stage('Preparation') {
            steps {
                echo 'Preparing workspace...'
                script {
                    // Membersihkan kontainer dan jaringan jika sudah ada
                    sh '''
                    docker-compose down || true
                    docker network rm ${NETWORK_NAME} || true
                    '''
                }
            }
        }
        stage('Build Docker Images') {
            steps {
                echo 'Building Docker images...'
                script {
                    // Membangun image dari Dockerfile
                    sh 'docker-compose build'
                }
            }
        }
        stage('Run Containers') {
            steps {
                echo 'Starting containers...'
                script {
                    // Menjalankan kontainer menggunakan docker-compose
                    sh 'docker-compose up -d'
                }
            }
        }
        stage('Validate Application') {
            steps {
                echo 'Validating application setup...'
                script {
                    // Mengecek apakah aplikasi sudah berjalan
                    sh '''
                    docker ps | grep ${DOCKER_IMAGE}
                    curl -I http://localhost:2022 || exit 1
                    '''
                }
            }
        }
        stage('Validate Database') {
            steps {
                echo 'Validating database connection...'
                script {
                    // Mengecek koneksi database
                    sh '''
                    docker exec dblaundryy-syifa mysql -u root -p${MYSQL_ROOT_PASSWORD} -e "USE ${MYSQL_DATABASE};"
                    '''
                }
            }
        }
    }
    post {
        always {
            echo 'Cleaning up...'
            script {
                // Membersihkan kontainer dan jaringan setelah selesai
                sh 'docker-compose down'
            }
        }
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed.'
        }
    }
}

