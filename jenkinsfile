pipeline {
    agent any
    environment {
        DOCKER_IMAGE = 'laundryy-syifa'
        NETWORK_NAME = 'laundryy-syifa'
        MYSQL_ROOT_PASSWORD = 'syifa123'
        MYSQL_DATABASE = 'homestead2091'
        APP_PORT = '2022'
        DB_PORT = '20222'
    }
    stages {
        stage('Preparation') {
            steps {
                echo 'Preparing workspace and cleaning up previous runs...'
                script {
                    // Memastikan Docker dan Docker Compose tersedia
                    sh '''
                    docker --version || (echo "Docker is not installed!" && exit 1)
                    docker-compose --version || (echo "Docker Compose is not installed!" && exit 1)
                    '''
                    // Membersihkan kontainer dan jaringan yang tersisa
                    sh '''
                    docker-compose down || true
                    docker network prune -f || true
                    '''
                }
            }
        }
        stage('Build Docker Images') {
            steps {
                echo 'Building Docker images...'
                script {
                    // Build Docker images
                    sh '''
                    docker-compose build || (echo "Docker image build failed!" && exit 1)
                    '''
                }
            }
        }
        stage('Run Containers') {
            steps {
                echo 'Starting Docker containers...'
                script {
                    // Start Docker containers
                    sh '''
                    docker-compose up -d || (echo "Failed to start containers!" && exit 1)
                    '''
                }
            }
        }
        stage('Validate Application') {
            steps {
                echo 'Validating application container and services...'
                script {
                    // Validate application container
                    sh '''
                    docker ps | grep ${DOCKER_IMAGE} || (echo "App container is not running!" && exit 1)
                    curl -s -o /dev/null -w "%{http_code}" http://localhost:${APP_PORT} | grep 200 || (echo "Application is not reachable on port ${APP_PORT}!" && exit 1)
                    '''
                }
            }
        }
        stage('Validate Database') {
            steps {
                echo 'Validating database connection...'
                script {
                    // Validate database connection
                    sh '''
                    docker exec dblaundryy-syifa mysql -u root -p${MYSQL_ROOT_PASSWORD} -e "SHOW DATABASES;" | grep ${MYSQL_DATABASE} || (echo "Database validation failed!" && exit 1)
                    '''
                }
            }
        }
    }
    post {
        always {
            echo 'Cleaning up containers and networks...'
            script {
                // Cleanup after pipeline execution
                sh 'docker-compose down'
            }
        }
        success {
            echo 'Pipeline executed successfully!'
        }
        failure {
            echo 'Pipeline failed. Check the logs for details.'
        }
    }
}



