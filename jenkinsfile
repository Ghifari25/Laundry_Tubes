pipeline {
    agent any
    environment {
        DOCKER_IMAGE = 'laundryy-syifa'
        NETWORK_NAME = 'laundryy-syifa'
        MYSQL_ROOT_PASSWORD = 'syifa123'
        MYSQL_DATABASE = 'homestead2091'
    }
    stages {
        stage('Preparation') {
            steps {
                echo 'Preparing workspace...'
                script {
                    // Debug log untuk environment
                    sh 'docker-compose version || echo "Docker Compose is not installed!"'
                    sh 'docker version || echo "Docker is not installed!"'
                    // Bersihkan kontainer jika ada
                    sh '''
                    docker-compose down || true
                    docker network rm ${NETWORK_NAME} || true
                    '''
                }
            }
        }
        stage('Build Docker Images') {
            steps {
                echo 'Building Docker images...'
                script {
                    try {
                        sh 'docker-compose build'
                    } catch (Exception e) {
                        error "Docker image
                        build failed: ${e.message}"
                    }
                }
            }
        }
        stage('Run Containers') {
            steps {
                echo 'Starting containers...'
                script {
                    try {
                        sh 'docker-compose up -d'
                    } catch (Exception e) {
                        error "Failed to start containers: ${e.message}"
                    }
                }
            }
        }
        stage('Validate Application') {
            steps {
                echo 'Validating application setup...'
                script {
                    try {
                        // Check if app container is running
                        sh '''
                        docker ps | grep ${DOCKER_IMAGE} || (echo "App container is not running!" && exit 1)
                        curl -I http://localhost:2022 || (echo "Application not reachable!" && exit 1)
                        '''
                    } catch (Exception e) {
                        error "Application validation failed: ${e.message}"
                    }
                }
            }
        }
        stage('Validate Database') {
            steps {
                echo 'Validating database connection...'
                script {
                    try {
                        // Check database connection
                        sh '''
                        docker exec dblaundryy-syifa mysql -u root -p${MYSQL_ROOT_PASSWORD} -e "USE ${MYSQL_DATABASE};" || (echo "Database validation failed!" && exit 1)
                        '''
                    } catch (Exception e) {
                        error "Database validation failed: ${e.message}"
                    }
                }
            }
        }
    }
    post {
        always {
            echo 'Cleaning up...'
            script {
                // Always clean up containers
                sh 'docker-compose down'
            }
        }
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed.'
        }
    }
}


